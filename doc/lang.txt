

#Aggregator functions:

sum &1
multiply &1
modus &1
median &1
iterate &1 into a
rev_iterate &1 into a


<program> ::= <glob_decl> <func_decl> <main>
<glob_decl> ::= <global> <glob_decl> | eps
<func_decl> ::= <function> <func_decl> | eps

<global> ::= "global" "variable" <var__> <endl__>

<function> ::= "function" <functionname__> <func_decl_args> <block> <endl__>
<func_decl_args> ::= "args" <func_args>

<main> ::= "main" <block> <endl__>

<block> ::= "begin" <endl_> <statement> <block_rest> "end"
<block_rest> ::= <statement> <block_rest> | eps

<statement> ::= <expression> | <while> | <if> | <do> | <read> | <write> | <increment> | <decrement> | eps

<expression> ::= <aggregator> <expr_>

<while> ::= <aggregator> "while" <expr_> <block> <endl_>

<if> ::= <aggregator> "if" <expr_> <block> <endl_>

<do> ::= <aggregator> "do" <number> "times" <block> <endl_>

<read> ::= <aggregator> "read" "into" <var__> <endl__> OK

<write> ::= <aggregator> "write" <expr_> <endl__> OK

<increment> ::= <aggregator> "increment" <var__> <amount_> <endl__> OK

<decrement> ::= <aggregator> "decrement" <var__> <amount_> <endl__> OK


<aggregator> ::= <aggregator__> | eps

<amount_> ::= "by" <number> | eps

<func_args> ::= <var__> <func_args_rest>
<func_args_rest> ::= <var__> <func_args_rest> | eps

<args> ::= <expr_> <args_rest>
<args_rest> ::= "," <expr_> <args_rest> | eps


<number> - Number literal or variable of number type
<string> - String in "" or variable of string type
<bool> - True/False or variable of bool type

<type> - Type identifier (number/string/bool)

<endl__> - newline
<var__> - user defined variable
<aggregator__> - aggregator number and symbol (eg. &1)
<functionname__> - name of program defined function


<expr_> ::= ....
